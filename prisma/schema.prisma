datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  refresh_token_expires_in Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Player {
    id          String  @id @default(cuid())
    name        String
    position    String
    image       String
}

model Event {
  id          String    @id @default(cuid())
  title       String
  description String?
  date        DateTime
}

model News {
    id          String   @id @default(cuid())
    title       String
    content     String
    createdAt   DateTime @default(now())
}

model Result {
  id      String   @id @default(cuid())
  team1   String
  team2   String
  score1  Int
  score2  Int
  crest1  String
  crest2  String
  date    DateTime
}

model Classification {
  id      String @id @default(cuid())
  team    String @unique
  crest   String
  points  Int
  pj      Int
  pg      Int
  pe      Int
  pp      Int
  gf      Int
  gc      Int
}

model Task {
  id          String    @id @default(uuid())
  description String
  day         String
  completed   Boolean   @default(false)
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}